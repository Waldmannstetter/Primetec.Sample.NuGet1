# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

on:
  create:
    branches:
      - '*'
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  ASSEMBLY_INFOFILE: 'Primetec.Sample.NuGet1.Core/AssemblyInfo.cs'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_DIRECTORY: ${{ github.workspace }}/nuget
  NUGET_APIKEY: ${{ secrets.NUGET_APIKEY }}

defaults:
  run:
    shell: pwsh

jobs:
  run_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
      - name: Run tests
        run: |
          dotnet test --configuration Release

  set_version:
    needs: [ run_test ]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.getversion.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: getversion
        run: |
          if ('${{ github.ref }}' == 'refs/heads/main') {
            $version = ./Get-Version.ps1 ./${{ env.ASSEMBLY_INFOFILE }} $True
          } else {
            $version = ./Get-Version.ps1 ./${{ env.ASSEMBLY_INFOFILE }} $False
          }
          
          echo "version=$version" >> $Env:GITHUB_OUTPUT

  create_nuget:
    needs: [ set_version ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
      - run: |
          dotnet pack ./Primetec.Sample.NuGet1.Core/Primetec.Sample.NuGet1.Core.csproj --configuration Release /p:Version=${{needs.set_version.outputs.version}} --output ${{ env.NUGET_DIRECTORY }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NUGET_DIRECTORY }}/*.nupkg

  deploy:
    needs: [ create_nuget ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NUGET_DIRECTORY }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NUGET_DIRECTORY }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ env.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json
          }
