# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget
  AssemblyInfoFile: 'Primetec.Sample.NuGet1.Core/AssemblyInfo.cs'
  Version: '-'

defaults:
  run:
    shell: pwsh

jobs:
  set_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set version
        run: |
          $version = .\Get-Version.ps1 ./Primetec.Sample.NuGet1.Core/AssemblyInfo.cs $False
          echo "$version"
          echo "Version=$version" >> $Env:GITHUB_ENV
      - name: Get version
        run: |
          echo "$env:Version"
          echo "${{ env.Version }}"

  run_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
      - name: Run tests
        run: |
          dotnet test --configuration Release

  create_nuget:
    runs-on: ubuntu-latest
    needs: [ run_test ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
      - run: |
          dotnet pack ./Primetec.Sample.NuGet1.Core/Primetec.Sample.NuGet1.Core.csproj --configuration Release /p:Version=${{ env.Version }} --output ${{ env.NuGetDirectory }}
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json
          }
